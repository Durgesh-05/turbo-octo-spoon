generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String     @id @default(uuid())
  email         String     @unique
  password      String
  name          String
  posts         Post[]
  likedPost     Like[]
  commentedPost Comment[]
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @default(now())
  Bookmark      Bookmark[]
}

model Post {
  id          String     @id @default(uuid())
  title       String
  description String
  published   Boolean    @default(false)
  authorId    String
  likes       Like[]
  comments    Comment[]
  author      User       @relation(fields: [authorId], references: [id], onDelete: Cascade)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @default(now())
  Bookmark    Bookmark[]
}

model Like {
  id        String   @id @default(uuid())
  userId    String
  postId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Comment {
  id        String   @id @default(uuid())
  userId    String
  content   String
  postId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Bookmark {
  id     String @id @default(uuid())
  userId String
  postId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  post   Post   @relation(fields: [postId], references: [id], onDelete: Cascade)
}
